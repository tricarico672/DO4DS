[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "EDA.html",
    "href": "EDA.html",
    "title": "eda_modeling",
    "section": "",
    "text": "This is an example of an EDA carried out using R using an isolated environment created using renv\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\n\ndf &lt;- penguins[complete.cases(penguins),]\nhead(df)\n\n# A tibble: 6 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  &lt;fct&gt;   &lt;fct&gt;              &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt;\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           36.7          19.3               193        3450\n5 Adelie  Torgersen           39.3          20.6               190        3650\n6 Adelie  Torgersen           38.9          17.8               181        3625\n# ℹ 2 more variables: sex &lt;fct&gt;, year &lt;int&gt;\n\n\n\nggplot(df, aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(method = \"lm\", se = F, color = \"red\") +\n  theme_clean() +\n  theme(legend.position = \"top\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThis shows a direct positive correlation between the two variables and some differences across species. In the modeling two methods are proposed. The first one is based off of a simple regression and shows an approximate fit to the data that is not very good (explains less than 40% of total variation in body mass). The second model employs a multiple linear regression with the categorical variable species to take into account the differences that might occur among the three different species in the sample. A graphical representation of this second model is given below.\n\nggplot(df, aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = F) +\n  theme_clean() +\n  theme(legend.position = \"top\")\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "modeling.html",
    "href": "modeling.html",
    "title": "eda_modeling",
    "section": "",
    "text": "Now we perform the data modeling using python and create an isolated environment with venv. The steps to follow are easy and it suffices to create the virtual environment using the terminal with the following command:\nThen we can proceed to activate it using this command:\nsource &lt;venv&gt;/bin/activate where &lt;venv&gt; is the name of the virtual environment."
  },
  {
    "objectID": "modeling.html#simple-regression",
    "href": "modeling.html#simple-regression",
    "title": "eda_modeling",
    "section": "Simple Regression",
    "text": "Simple Regression\n\nimport pandas as pd\nfrom sklearn.linear_model import LinearRegression\n\n\ndf = pd.read_csv(\"~/Desktop/Projects/DO4DS/eda_modeling/data/penguins.csv\")\n\n\nmodel = LinearRegression()\nx = df[\"bill_length_mm\"]\ny = df[\"body_mass_g\"]\n\n\nmodel.fit(x.values.reshape(-1,1),y)\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\nTo have a look at the estimated slope coefficient we can use the following:\n\nprint(f\"the estimated slope parameter for the only predictor {x.name} is {model.coef_[0]}\")\n\nthe estimated slope parameter for the only predictor bill_length_mm is 86.79175964755542\n\n\n\ny_pred = model.predict(x.values.reshape(-1,1))\n\n\nfrom sklearn.metrics import r2_score\n\n\nr2_score(y, y_pred)\n\n0.34745261128883764\n\n\nThe \\(R^2\\) score is pretty low suggesting that the model could be improved further by specifying some predictors or by adding the variation coming from the species.\n\nfrom pins import board_folder\nfrom vetiver import vetiver_pin_write, VetiverModel\n\nmodel_board = board_folder(\n  \"data/model\", \n  allow_pickle_read = True\n)\n\nv = VetiverModel(model, model_name='mock_model', prototype_data=x.values.reshape(-1,1))\nvetiver_pin_write(model_board, v)\n\nModel Cards provide a framework for transparent, responsible reporting. \n Use the vetiver `.qmd` Quarto template as a place to start, \n with vetiver.model_card()\n('The hash of pin \"mock_model\" has not changed. Your pin will not be stored.',)\n\n\n\nfrom vetiver import VetiverAPI\napp = VetiverAPI(v, check_prototype = True)"
  },
  {
    "objectID": "modeling.html#multiple-regression",
    "href": "modeling.html#multiple-regression",
    "title": "eda_modeling",
    "section": "Multiple regression",
    "text": "Multiple regression\n\ndummies_species = pd.get_dummies(df[\"species\"])\n\ndf_x = pd.concat([x, dummies_species], axis = 1)\n\ndf_x.head()\n\n\n\n\n\n\n\n\nbill_length_mm\nAdelie\nChinstrap\nGentoo\n\n\n\n\n0\n39.1\nTrue\nFalse\nFalse\n\n\n1\n39.5\nTrue\nFalse\nFalse\n\n\n2\n40.3\nTrue\nFalse\nFalse\n\n\n3\n36.7\nTrue\nFalse\nFalse\n\n\n4\n39.3\nTrue\nFalse\nFalse\n\n\n\n\n\n\n\nnow we can fit a multiple regression model\n\nmultiple_reg = LinearRegression()\n\nmultiple_reg.fit(df_x, y)\n\nLinearRegression()In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.LinearRegression?Documentation for LinearRegressioniFittedLinearRegression() \n\n\n\nprint(df_x.columns)\nprint(multiple_reg.coef_)\n\nIndex(['bill_length_mm', 'Adelie', 'Chinstrap', 'Gentoo'], dtype='object')\n[  90.29759774   93.41326282 -783.52837788  690.11511506]\n\n\n\ny_pred_multiple = multiple_reg.predict(df_x)\n\n\nr2_score(y, y_pred_multiple)\n\n0.7848476112531085\n\n\nBy including the variation coming from the different species, it is possible to now increase the \\(R^2\\)score."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "eda_modeling",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]